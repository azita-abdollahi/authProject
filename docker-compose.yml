version: "3"

services: 
  mongodb: 
    image: mongo:4.2
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    restart: unless-stopped
    networks: 
      - api-net
    volumes: 
      - ./mongo-data:/data/db

  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo-express
    depends_on:
      - mongodb
    networks:
      - api-net
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_USER}:${MONGO_PASS}@mongodb:27017/${MONGO_DB}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASS}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    env_file:
      - ./mongo-express_env
  
  redis:
    image: redis:7.0
    container_name: redis
    restart: unless-stopped
    networks:
      - api-net
    command: redis-server --requirepass ${redis_pass}
    volumes: 
      - ./cache:/data

  backend:
    image: backend
    container_name: backend-container
    build: 
      context: .
    restart: unless-stopped
    depends_on:
      - mongodb
      - redis
    networks: 
      - api-net
      
  nginx: 
    image: nginx:1.21
    container_name: nginx_proxy
    restart: on-failure
    depends_on:
      - backend
    networks: 
      - api-net
    ports:
      - "8080:8080"
      - "8082:8081"
    volumes:
      - ./conf.d/:/etc/nginx/conf.d/

networks:
  api-net:
